<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Help page - EPpostprocessing</title><link href="https://katsuya0719.github.io/DjangoEP/" rel="alternate"></link><link href="https://katsuya0719.github.io/DjangoEP/feeds/eppostprocessing.atom.xml" rel="self"></link><id>https://katsuya0719.github.io/DjangoEP/</id><updated>2017-01-30T11:00:00+08:00</updated><entry><title>Future plan of EP postprocessing tool as of 2017</title><link href="https://katsuya0719.github.io/DjangoEP/17013011.html" rel="alternate"></link><published>2017-01-30T11:00:00+08:00</published><updated>2017-01-30T11:00:00+08:00</updated><author><name>obakatsu</name></author><id>tag:katsuya0719.github.io,2017-01-30:/DjangoEP/17013011.html</id><summary type="html">&lt;p&gt;This page summarizes the future implementation plan for EP postprocessing tool&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Compatible for IES &amp;amp; eQuest result file&lt;/h2&gt;
&lt;p&gt;Now this application can only accept energyplus html result file. However, other software such as IES &amp;amp; eQuest is being used in Arup. Hence, I am investigating how to make this application compatible for IES &amp;amp; eQuest result file.  &lt;/p&gt;
&lt;h2&gt;Correlate with 3d model&lt;/h2&gt;
&lt;p&gt;Correlating simulation result with 3d model can tell the stakeholder much more. Some software have been trying to map simulation result to 3d model as following. However, I could not find the function which I want to use.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Grasshopper + Honeybee  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OpenStudio + viewData measure  &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Combine with material database&lt;/h2&gt;
&lt;h2&gt;Combine with machine learning&lt;/h2&gt;</content><category term="feature"></category></entry><entry><title>What you can do by EP postprocessing tool</title><link href="https://katsuya0719.github.io/DjangoEP/17013010.html" rel="alternate"></link><published>2017-01-30T10:00:00+08:00</published><updated>2017-01-30T10:00:00+08:00</updated><author><name>obakatsu</name></author><id>tag:katsuya0719.github.io,2017-01-30:/DjangoEP/17013010.html</id><summary type="html">&lt;p&gt;This page summarizes the features of EP postprocessing tool&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Why you need this tool?&lt;/h2&gt;
&lt;h3&gt;Save time for post-processing procedure by automation. Dig into data more using the help of application.&lt;/h3&gt;
&lt;p&gt;Energy simulation generate lots of data which is hard to process all manually. Thus, it takes time to extract data which we are after. Hence, we did not have sufficient time and resource to feedback to actual design or influence to stakeholder. This application can help you to automate tedious post processing work. Even more, sophisticated visualization can give user more insight than conventional way.&lt;/p&gt;
&lt;h2&gt;Postprocessing is just uploading&lt;/h2&gt;
&lt;p&gt;In order to use this application, what you have to do is just upload result html file. Then this application extract information and make graph for you. Instruction is summarized in &lt;a href="https://katsuya0719.github.io/DjangoEP/first-post.html"&gt;this page&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;What kind of data we can visualize?&lt;/h2&gt;
&lt;p&gt;Once you have uploaded data, following pages can help you to understand simulation result.&lt;br&gt;
- Project list page&lt;br&gt;
  This page summarizes all the project uploaded to this applicaiton with some representative data such as program, locaiton, area, EUI, Unmet hour and so on.&lt;br&gt;
&lt;img alt="images/project_list.png" src="https://katsuya0719.github.io/DjangoEP/images/project_list.png" width="400px"&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Project detail page&lt;br&gt;
  This page shows detail information such as energy consumption breakdown data and window wall ratio for each direction&lt;br&gt;
&lt;img alt="images/project_detail.png" src="https://katsuya0719.github.io/DjangoEP/images/project_detail.png" width="400px"&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Basic information for each room&lt;br&gt;
  THis page shows input information for each zone which affect to energy consumption. By looking at this page, user can check whether input information is right or not at a glance.&lt;br&gt;
&lt;img alt="images/basic_info.png" src="https://katsuya0719.github.io/DjangoEP/images/basic_info.png" width="400px"&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Heat balance for each room&lt;br&gt;
  This page shows heat gain for each room. In south east asia region, cooling is one of the major energy consumption. Cooling load correlate to heat gain basically. So investigating heat gain in detail can help user to find out some opportunity to reduce energy consumption.&lt;br&gt;
&lt;img alt="images/heat_balance.png" src="https://katsuya0719.github.io/DjangoEP/images/heat_balance.png" width="400px"&gt;  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Case comparison page&lt;br&gt;
  This page can show the case comparision for energy consumption. For energy simulation, knowing energy reduction compared to base case is the most important information. Once user upload result data for multiple version, they can check the energy reduction rapidly.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="feature"></category></entry><entry><title>How to use EP postprocessing tool</title><link href="https://katsuya0719.github.io/DjangoEP/first-post.html" rel="alternate"></link><published>2017-01-29T22:00:00+08:00</published><updated>2017-01-29T22:00:00+08:00</updated><author><name>obakatsu</name></author><id>tag:katsuya0719.github.io,2017-01-29:/DjangoEP/first-post.html</id><summary type="html">&lt;p&gt;This page is showing how to use EPpostprocessing&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Step1. Set idf file before running simulation&lt;/h2&gt;
&lt;p&gt;Once you set all the setting for energy simulation, set following setting to the idf file. &lt;br&gt;
    1. In Output:Table:SummaryReports chapter, set Report 1 Name to AllSummary &lt;br&gt;
&lt;img alt="images/instruction1.png" src="https://katsuya0719.github.io/DjangoEP/images/instruction1.png" width="400px"&gt; &lt;br&gt;
    2. In OutputControl:Table:Style chapter, set Column Separator to CommaAndHTML and Unit Conversion to JtoKWH &lt;br&gt;
&lt;img alt="images/instruction2.png" src="https://katsuya0719.github.io/DjangoEP/images/instruction2.png" width="400px"&gt;     &lt;/p&gt;
&lt;h2&gt;Step2. Run the simulation&lt;/h2&gt;
&lt;h2&gt;Step3. Upload the simulation result&lt;/h2&gt;
&lt;p&gt;Once you finished the simulation, go to the upload page[link] and input all the information and upload html file from the simulation result.
&lt;img alt="images/instruction3.png" src="https://katsuya0719.github.io/DjangoEP/images/instruction3.png" width="400px"&gt;  &lt;/p&gt;
&lt;h2&gt;Step4. Investigate visualized data&lt;/h2&gt;
&lt;p&gt;Once application finished to process the data, project list page will be shown. You can investigate the data reading through the &lt;a href="https://katsuya0719.github.io/DjangoEP/17013010.html"&gt;many kinds of visualized data&lt;/a&gt;&lt;/p&gt;</content><category term="help"></category></entry></feed>